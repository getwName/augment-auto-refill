// 后台脚本，用于管理扩展的生命周期\nchrome.runtime.onInstalled.addListener(() => {\n  console.log('Augment续杯扩展已安装');\n});\n\n// 监听来自内容脚本的消息\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.action === 'log') {\n    console.log('来自内容脚本的消息:', request.data);\n    return true;\n  }\n\n  if (request.action === 'getMailList') {\n    getMailList(request.data)\n      .then(result => sendResponse({ success: true, data: result }))\n      .catch(error => sendResponse({ success: false, error: error.message }));\n    return true; // 保持消息通道开放\n  }\n\n  if (request.action === 'getMailDetail') {\n    getMailDetail(request.data)\n      .then(result => sendResponse({ success: true, data: result }))\n      .catch(error => sendResponse({ success: false, error: error.message }));\n    return true;\n  }\n\n  if (request.action === 'deleteEmail') {\n    deleteEmail(request.data)\n      .then(result => sendResponse({ success: true, data: result }))\n      .catch(error => sendResponse({ success: false, error: error.message }));\n    return true;\n  }\n});\n\n// 获取邮件列表\nasync function getMailList({ username, emailExtension, epin }) {\n  const mailListUrl = `https://tempmail.plus/api/mails?email=${username}${emailExtension}&limit=20&epin=${epin}`;\n\n  try {\n    const response = await fetch(mailListUrl);\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('获取邮件列表失败:', error);\n    throw error;\n  }\n}\n\n// 获取邮件详情\nasync function getMailDetail({ username, emailExtension, epin, firstId }) {\n  const mailDetailUrl = `https://tempmail.plus/api/mails/${firstId}?email=${username}${emailExtension}&epin=${epin}`;\n\n  try {\n    const response = await fetch(mailDetailUrl);\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('获取邮件详情失败:', error);\n    throw error;\n  }\n}\n\n// 删除邮件\nasync function deleteEmail({ username, emailExtension, epin, firstId }) {\n  const deleteUrl = 'https://tempmail.plus/api/mails/';\n  const formData = new URLSearchParams();\n  formData.append('email', `${username}${emailExtension}`);\n  formData.append('first_id', firstId);\n  formData.append('epin', epin);\n\n  try {\n    const response = await fetch(deleteUrl, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: formData\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('删除邮件失败:', error);\n    throw error;\n  }\n}\n"